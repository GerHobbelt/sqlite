# 2020 May 06
#
# The author disclaims copyright to this source code.  In place of
# a legal notice, here is a blessing:
#
#    May you do good and not evil.
#    May you find forgiveness for yourself and forgive others.
#    May you share freely, never taking more than you give.
#
#***********************************************************************
#

set testdir [file dirname $argv0]
source $testdir/tester.tcl
set testprefix walsetlk

ifcapable !wal {finish_test ; return }
db timeout 1000

#-------------------------------------------------------------------------
# 1.*: Test that nothing goes wrong if recovery is forced while opening
#      a write transaction or performing a checkpoint with blocking locks.
#

do_execsql_test 1.0 {
  CREATE TABLE t1(x, y);
  PRAGMA journal_mode = wal;
  INSERT INTO t1 VALUES(1, 2);
  INSERT INTO t1 VALUES(3, 4);
  INSERT INTO t1 VALUES(5, 6);
  INSERT INTO t1 VALUES(7, 8);
} {wal}

sqlite3 db2 test.db
db2 timeout 1000

do_execsql_test -db db2 1.1 {
  SELECT * FROM t1
} {1 2 3 4 5 6 7 8}

set fd [open test.db-shm r+]
puts $fd "blahblahblahblah"
flush $fd

do_execsql_test 1.2 {
  BEGIN;
    INSERT INTO t1 VALUES(9, 10);
}

do_execsql_test -db db2 1.3 {
  SELECT * FROM t1
} {1 2 3 4 5 6 7 8}

do_test 1.3 {
  list [catch {db2 eval { BEGIN EXCLUSIVE }} msg] $msg
} {1 {database is locked}}

do_execsql_test 1.4 { COMMIT }
do_execsql_test -db db2 1.5 {
  SELECT * FROM t1
} {1 2 3 4 5 6 7 8 9 10}

puts $fd "blahblahblahblah"
flush $fd

do_execsql_test -db db2 1.6 {
  PRAGMA wal_checkpoint = TRUNCATE
} {0 0 0}

do_test 1.7 {
  file size test.db-wal
} 0

finish_test

